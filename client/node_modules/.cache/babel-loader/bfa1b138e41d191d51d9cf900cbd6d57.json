{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Internship 3W\\\\Work\\\\module2\\\\Website3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Internship 3W\\\\Work\\\\module2\\\\Website3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Internship 3W\\\\Work\\\\module2\\\\Website3\\\\client\\\\src\\\\Components\\\\Login.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useState } from 'react';\n// import loginpic from '../images/loginpic.svg'\nimport { NavLink, useHistory } from 'react-router-dom';\n// import './Login.css'\n// import {\n//   MDBBtn,\n//   MDBContainer,\n//   MDBRow,\n//   MDBCol,\n//   MDBCard,\n//   MDBCardBody,\n//   MDBInput,\n//   MDBIcon\n// }\n//   from 'mdb-react-ui-kit';\n\nvar Login = function Login() {\n  var history = useHistory();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var loginUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      var res, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            _context.next = 3;\n            return fetch('/login', {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            });\n          case 3:\n            res = _context.sent;\n            data = res.json();\n            if (data.status === 400 || !data) {\n              window.alert(\"Invalid User\");\n            } else {\n              window.alert(\"Login Successful\");\n              history.push(\"/\");\n            }\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function loginUser(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return (\n    /*#__PURE__*/\n    // <MDBContainer fluid>\n    //   <MDBRow className='d-flex justify-content-center align-items-center h-100'>\n    //     <MDBCol col='12'>\n    //       <MDBCard className='bg-dark text-white my-5 mx-auto' style={{ borderRadius: '1rem', maxWidth: '400px' }}>\n    //         <MDBCardBody className='p-5 d-flex flex-column align-items-center mx-auto w-100'>\n    //           <h2 className=\"fw-bold mb-2 text-uppercase\">Login</h2>\n    //           <p className=\"text-white-50 mb-5\">Please enter your login and password!</p>\n    //           <MDBInput wrapperClass='mb-4 mx-5 w-100' labelClass='text-white' label='Email address' id='formControlLg' type='email' size=\"lg\" />\n    //           <MDBInput wrapperClass='mb-4 mx-5 w-100' labelClass='text-white' label='Password' id='formControlLg' type='password' size=\"lg\" />\n    //           <p className=\"small mb-3 pb-lg-2\"><NavLink className=\"text-white-50\" to=\"/home\">Forgot password?</NavLink></p>\n    //           <MDBBtn outline className='mx-2 px-5' color='white' size='lg'>\n    //             Login\n    //           </MDBBtn>\n    //           <div className='d-flex flex-row mt-3 mb-5'>\n    //             <MDBBtn tag='a' color='none' className='m-3' style={{ color: 'white' }}>\n    //               <MDBIcon fab icon='facebook-f' size=\"lg\" />\n    //             </MDBBtn>\n    //             <MDBBtn tag='a' color='none' className='m-3' style={{ color: 'white' }}>\n    //               <MDBIcon fab icon='twitter' size=\"lg\" />\n    //             </MDBBtn>\n    //             <MDBBtn tag='a' color='none' className='m-3' style={{ color: 'white' }}>\n    //               <MDBIcon fab icon='google' size=\"lg\" />\n    //             </MDBBtn>\n    //           </div>\n    //           <div>\n    //             <p className=\"mb-0\">Don't have an account? <NavLink to=\"/signup\" className=\"text-white-50 fw-bold\">Sign Up</NavLink></p>\n    //           </div>\n    //         </MDBCardBody>\n    //       </MDBCard>\n    //     </MDBCol>\n    //   </MDBRow>\n    // </MDBContainer>\n    React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"login\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-content\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup-form\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"from-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Log-in\"), /*#__PURE__*/React.createElement(\"form\", {\n      method: \"POST\",\n      className: \"signup-form\",\n      id: \"signup-form\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"bx bxs-envelope bx-sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      autoComplete: \"off\",\n      value: email,\n      onChange: function onChange(e) {\n        return setEmail(e.target.value);\n      },\n      placeholder: \"Your Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"bx bxs-lock-alt bx-sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      autoComplete: \"off\",\n      value: password,\n      onChange: function onChange(e) {\n        return setPassword(e.target.value);\n      },\n      placeholder: \"Your Password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group form-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"login\",\n      id: \"login\",\n      className: \"form-submit\",\n      value: \"Login\",\n      onClick: loginUser,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/signup\",\n      className: \"signup-image-link\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \"Create Account\"))))))))\n  );\n};\nexport default Login;","map":{"version":3,"names":["React","useState","NavLink","useHistory","Login","history","email","setEmail","password","setPassword","loginUser","e","preventDefault","fetch","method","headers","body","JSON","stringify","res","data","json","status","window","alert","push","target","value"],"sources":["D:/Internship 3W/Work/module2/Website3/client/src/Components/Login.js"],"sourcesContent":["import React, {useState} from 'react'\r\n// import loginpic from '../images/loginpic.svg'\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n// import './Login.css'\r\n// import {\r\n//   MDBBtn,\r\n//   MDBContainer,\r\n//   MDBRow,\r\n//   MDBCol,\r\n//   MDBCard,\r\n//   MDBCardBody,\r\n//   MDBInput,\r\n//   MDBIcon\r\n// }\r\n//   from 'mdb-react-ui-kit';\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const loginUser = async (e) => {\r\n    e.preventDefault();\r\n    const res = await fetch ('/login', {\r\n      method:\"POST\",\r\n      headers:{\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password\r\n      })\r\n    });\r\n\r\n    const data = res.json();\r\n    if(data.status === 400 || !data) {\r\n      window.alert(\"Invalid User\");\r\n    }else {\r\n      window.alert(\"Login Successful\");\r\n      history.push(\"/\")\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    // <MDBContainer fluid>\r\n\r\n    //   <MDBRow className='d-flex justify-content-center align-items-center h-100'>\r\n    //     <MDBCol col='12'>\r\n\r\n    //       <MDBCard className='bg-dark text-white my-5 mx-auto' style={{ borderRadius: '1rem', maxWidth: '400px' }}>\r\n    //         <MDBCardBody className='p-5 d-flex flex-column align-items-center mx-auto w-100'>\r\n\r\n    //           <h2 className=\"fw-bold mb-2 text-uppercase\">Login</h2>\r\n    //           <p className=\"text-white-50 mb-5\">Please enter your login and password!</p>\r\n\r\n    //           <MDBInput wrapperClass='mb-4 mx-5 w-100' labelClass='text-white' label='Email address' id='formControlLg' type='email' size=\"lg\" />\r\n    //           <MDBInput wrapperClass='mb-4 mx-5 w-100' labelClass='text-white' label='Password' id='formControlLg' type='password' size=\"lg\" />\r\n\r\n    //           <p className=\"small mb-3 pb-lg-2\"><NavLink className=\"text-white-50\" to=\"/home\">Forgot password?</NavLink></p>\r\n    //           <MDBBtn outline className='mx-2 px-5' color='white' size='lg'>\r\n    //             Login\r\n    //           </MDBBtn>\r\n\r\n    //           <div className='d-flex flex-row mt-3 mb-5'>\r\n    //             <MDBBtn tag='a' color='none' className='m-3' style={{ color: 'white' }}>\r\n    //               <MDBIcon fab icon='facebook-f' size=\"lg\" />\r\n    //             </MDBBtn>\r\n\r\n    //             <MDBBtn tag='a' color='none' className='m-3' style={{ color: 'white' }}>\r\n    //               <MDBIcon fab icon='twitter' size=\"lg\" />\r\n    //             </MDBBtn>\r\n\r\n    //             <MDBBtn tag='a' color='none' className='m-3' style={{ color: 'white' }}>\r\n    //               <MDBIcon fab icon='google' size=\"lg\" />\r\n    //             </MDBBtn>\r\n    //           </div>\r\n\r\n    //           <div>\r\n    //             <p className=\"mb-0\">Don't have an account? <NavLink to=\"/signup\" className=\"text-white-50 fw-bold\">Sign Up</NavLink></p>\r\n\r\n    //           </div>\r\n    //         </MDBCardBody>\r\n    //       </MDBCard>\r\n\r\n    //     </MDBCol>\r\n    //   </MDBRow>\r\n\r\n    // </MDBContainer>\r\n\r\n    <>\r\n      <section className='login'>\r\n        <div className='container mt-5'>\r\n          <div className='login-content'>\r\n\r\n            {/* <div className='login-image'>\r\n              <figure>\r\n                <img src={loginpic} alt=\"\" />\r\n              </figure>\r\n              <NavLink to=\"/signup\" className=\"signup-image-link\">Create Account</NavLink>\r\n            </div> */}\r\n            <div className='signup-form'>\r\n              <h2 className='from-title'>Log-in</h2>\r\n              <form method='POST' className='signup-form' id='signup-form'>\r\n                \r\n\r\n                <div className='form-group'>\r\n                  <label htmlFor='email'>\r\n                    <i class='bx bxs-envelope bx-sm'></i>\r\n                  </label>\r\n                  <input type=\"email\" name=\"email\" id=\"email\" autoComplete=\"off\" \r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Your Email\" />\r\n                </div>\r\n\r\n                \r\n                \r\n\r\n                <div className='form-group'>\r\n                  <label htmlFor='password'>\r\n                    <i class='bx bxs-lock-alt bx-sm'></i>\r\n                  </label>\r\n                  <input type=\"password\" name=\"password\" id=\"password\" autoComplete=\"off\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Your Password\" />\r\n                </div>\r\n\r\n                \r\n\r\n                <div className='form-group form-button'>\r\n                  <input type=\"submit\" name=\"login\" id=\"login\" className=\"form-submit\" value=\"Login\" onClick={loginUser} />\r\n                </div>\r\n                <div className='account'>\r\n                <NavLink to=\"/signup\" className=\"signup-image-link\">Create Account</NavLink>\r\n                </div>\r\n              </form>\r\n\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Login\r\n"],"mappings":";;;;+CACA;AADA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC;AACA,SAASC,OAAO,EAAEC,UAAU,QAAQ,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAK,GAAS;EAElB,IAAMC,OAAO,GAAGF,UAAU,EAAE;EAAC,gBACHF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BK,KAAK;IAAEC,QAAQ;EAAA,iBACUN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCO,QAAQ;IAAEC,WAAW;EAE5B,IAAMC,SAAS;IAAA,sEAAG,iBAAOC,CAAC;MAAA;MAAA;QAAA;UAAA;YACxBA,CAAC,CAACC,cAAc,EAAE;YAAC;YAAA,OACDC,KAAK,CAAE,QAAQ,EAAE;cACjCC,MAAM,EAAC,MAAM;cACbC,OAAO,EAAC;gBACN,cAAc,EAAG;cACnB,CAAC;cACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;gBACnBZ,KAAK,EAALA,KAAK;gBACLE,QAAQ,EAARA;cACF,CAAC;YACH,CAAC,CAAC;UAAA;YATIW,GAAG;YAWHC,IAAI,GAAGD,GAAG,CAACE,IAAI,EAAE;YACvB,IAAGD,IAAI,CAACE,MAAM,KAAK,GAAG,IAAI,CAACF,IAAI,EAAE;cAC/BG,MAAM,CAACC,KAAK,CAAC,cAAc,CAAC;YAC9B,CAAC,MAAK;cACJD,MAAM,CAACC,KAAK,CAAC,kBAAkB,CAAC;cAChCnB,OAAO,CAACoB,IAAI,CAAC,GAAG,CAAC;YACnB;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA,CAEF;IAAA,gBArBKf,SAAS;MAAA;IAAA;EAAA,GAqBd;EAED;IAAA;IAEE;IAEA;IACA;IAEA;IACA;IAEA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IAEA;IACA;IAEA;IAEA,uDACE;MAAS,SAAS,EAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACxB;MAAK,SAAS,EAAC,gBAAgB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC7B;MAAK,SAAS,EAAC,eAAe;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAQ5B;MAAK,SAAS,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC1B;MAAI,SAAS,EAAC,YAAY;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAC,QAAM,CAAK,eACtC;MAAM,MAAM,EAAC,MAAM;MAAC,SAAS,EAAC,aAAa;MAAC,EAAE,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAG1D;MAAK,SAAS,EAAC,YAAY;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACzB;MAAO,OAAO,EAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACpB;MAAG,KAAK,EAAC,uBAAuB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAK,CAC/B,eACR;MAAO,IAAI,EAAC,OAAO;MAAC,IAAI,EAAC,OAAO;MAAC,EAAE,EAAC,OAAO;MAAC,YAAY,EAAC,KAAK;MAC5D,KAAK,EAAEJ,KAAM;MACb,QAAQ,EAAE,kBAACK,CAAC;QAAA,OAAKJ,QAAQ,CAACI,CAAC,CAACe,MAAM,CAACC,KAAK,CAAC;MAAA,CAAC;MAC1C,WAAW,EAAC,YAAY;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACzB,eAKN;MAAK,SAAS,EAAC,YAAY;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACzB;MAAO,OAAO,EAAC,UAAU;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACvB;MAAG,KAAK,EAAC,uBAAuB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAK,CAC/B,eACR;MAAO,IAAI,EAAC,UAAU;MAAC,IAAI,EAAC,UAAU;MAAC,EAAE,EAAC,UAAU;MAAC,YAAY,EAAC,KAAK;MACrE,KAAK,EAAEnB,QAAS;MAChB,QAAQ,EAAE,kBAACG,CAAC;QAAA,OAAKF,WAAW,CAACE,CAAC,CAACe,MAAM,CAACC,KAAK,CAAC;MAAA,CAAC;MAC7C,WAAW,EAAC,eAAe;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CAC5B,eAIN;MAAK,SAAS,EAAC,wBAAwB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACrC;MAAO,IAAI,EAAC,QAAQ;MAAC,IAAI,EAAC,OAAO;MAAC,EAAE,EAAC,OAAO;MAAC,SAAS,EAAC,aAAa;MAAC,KAAK,EAAC,OAAO;MAAC,OAAO,EAAEjB,SAAU;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACrG,eACN;MAAK,SAAS,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACxB,oBAAC,OAAO;MAAC,EAAE,EAAC,SAAS;MAAC,SAAS,EAAC,mBAAmB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAC,gBAAc,CAAU,CACtE,CACD,CAEH,CAIF,CACF,CACE;EACT;AAEP,CAAC;AAGD,eAAeN,KAAK"},"metadata":{},"sourceType":"module"}